{"version":3,"sources":["core/Home.js","auth/index.js","core/Menu.js","User/Signup.js","User/Signin.js","User/Profile.js","User/apiUser.js","MainRouter.js","App.js","index.js"],"names":["Home","className","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","href","style","to","onClick","next","push","removeItem","fetch","process","method","then","response","console","log","json","catch","err","user","_id","name","Signup","handleChange","event","setState","error","target","value","clickSubmit","preventDefault","state","headers","Accept","body","stringify","signup","email","password","data","open","signupForm","action","onChange","type","id","placeholder","r","required","classname","this","display","Component","Signin","signin","jwt","redirectToReferer","setItem","signinForm","Profile","init","userId","token","Authorization","read","redirectToSignin","props","match","params","Date","created","toDateString","MainRouter","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9089780.chunk.js","sourcesContent":["\n\nimport React from \"react\";\n\nconst Home = () => (\n   \n    <div className=\"jumbotron\">\n  <h1 className=\"neon\"> Talk is cheap, Show me the code . </h1>\n</div>\n\n);\n\nexport default Home;","export const signup = user => {\n    return fetch(`${process.env.REACT_APP_API_URL}/signup`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const signin = user => {\n    return fetch(`${process.env.REACT_APP_API_URL}/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const authenticate = (jwt, next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n        next();\n    }\n};\n\n//LOG THE USER OUT\n\nexport const signout = next => {// we are going to execute & do a callback to redirect to another page\n    if (typeof window !== \"undefined\") localStorage.removeItem(\"jwt\");// make sure we have the window object\n    next();\n    return fetch(`${process.env.REACT_APP_API_URL}/signout`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            console.log(\"signout\", response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const isAuthenticated = () => {\n    if (typeof window == \"undefined\") {\n        return false;\n    }\n\n    if (localStorage.getItem(\"jwt\")) {\n        return JSON.parse(localStorage.getItem(\"jwt\"));\n    } else {\n        return false;\n    }\n};\n\n\n\n\n\n\n\n","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom'; // withRouter takes another component as an argument\nimport {signout, isAuthenticated} from '../auth';\n\n\n\n// to show links in a different color if visited\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) return { color: \"#008B8B\" };\n    else return { color: \"#ffffff\" };\n};\n\n//A method : if the token is there , we have the token & we can use this info to show & hide the links\n// if not just return false\n\n/*export const isAuthenticated = (jwt, next) => { // if the token is there we have everything in the json webtoken\n    if (typeof window !== \"undefined\") { \n        // as long as there is window object we can do something else false\n        return false}\n\n       if (localStorage.getItem(\"jwt\")){\n           return JSON.parse(localStorage.getItem(\"jwt\")).JSON;\n        }\n           else {\n               return false\n           } \n   \n    };*/\n\n/*\n//LOG THE USER OUT\n\nexport const signout = next => { // we are going to execute & do a callback to redirect to another page\n    if (typeof window !== \"undefined\") localStorage.removeItem(\"jwt\"); // make sure we have the window object\n    next(); // then we can access the local storage and remove the key jwt from local Storage in the client side\n    return fetch(\"http://localhost:8000/signout\", {\n        method: \"GET\"\n    })\n        .then(response => { \n            console.log(\"signout\", response);\n            return response.json();\n        })\n        .catch(err => console.log(err)); // catch if any error \n};\n\n*/\n\n\n\n\n/*\n\n// We can create a functional component, we don't need a class its gonna be without state\n\nconst Menu = ({history}) => (\n\n    <div>\n        <div className=\"menu\">\n                        <a href=\"\">        <Link style={isActive(history,\"/\")} to = \"/\"> Home  </Link>  </a>                            \n                        <a href=\"\">        <Link style={isActive(history,'/signup')} to = \"/signup\"> Join  </Link> </a>\n                        <a href=\"\">        <Link style={isActive(history,\"/signin\")} to = \"/signin\"> Members </Link>   </a>\n                        <a href=\"\" style={(isActive(history,\"/signout\"))} onClick={()=> signout(()=> history.push(\"/\"))}>   Exit   </a>\n                        \n                        <a href=\"\">       \n                        \n                         <Link\n                            to={`/user/${isAuthenticated().user._id}`}\n                            style={{ color: \"#ffff\" }}\n                        >\n                            {`${isAuthenticated().user.name}'s profile`}\n                        </Link>    </a>\n\n        \n        <div className=\"marca\"></div>\n\n       \n</div>\n\n</div>)\n\n\n\nexport default withRouter (Menu); */\n\n\nconst Menu = ({ history }) => (\n    <div>\n            <div className=\"menu\">\n\n            <a href=\"\">        <Link style={isActive(history,\"/\")} to = \"/\"> Home  </Link>  </a>                            \n\n\n            {!isAuthenticated() && (\n                <>\n                <a href=\"\">        <Link style={isActive(history,'/signup')} to = \"/signup\"> Join  </Link> </a>\n\n                <a href=\"\">        <Link style={isActive(history,\"/signin\")} to = \"/signin\"> Members </Link>   </a>\n\n                </> \n            )}\n\n            {isAuthenticated() && (\n                <>\n\n                <a href=\"\" \n                    style={\n                                (isActive(history, \"/signup\"))\n                            }\n                            onClick={() => signout(() => history.push(\"/\"))}>  Exit   </a>\n\n                \n                    <a href=\"\">\n                        <Link\n                            to={`/user/${isAuthenticated().user._id}`}\n                            style= {isActive(history,`/user/${isAuthenticated().user._id}`)}\n                        >\n                            {`${isAuthenticated().user.name}`}\n                        </Link>                    \n\n                    </a> \n                </>           \n\n            )}\n\n   <div className=\"marca\"></div> \n   \n   </div> </div>\n);\n\nexport default withRouter(Menu);\n\n\n","\nimport React, { Component } from \"react\";\nimport {signup} from '../auth';\n\n\nclass Signup extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            open: false\n        };\n    }\n    // This will take the name as parameter , and the arrow function will return another function\n    // as the input changes, they will be available on the event target\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n    };\n\n    clickSubmit = event => {\n        event.preventDefault();\n        const { name, email, password } = this.state;\n        const user = {\n            name,\n            email,\n            password\n        };\n        // console.log(user);\n        signup(user).then(data => {\n            if (data.error) this.setState({ error: data.error });\n            else\n                this.setState({\n                    error: \"\",\n                    name: \"\",\n                    email: \"\",\n                    password: \"\",\n                    open: true\n                });\n        });\n    };\n\n    /* signup = user => {\n        return fetch(\"http://localhost:8000/signup\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n            .then(response => {\n                return response.json();\n            })\n            .catch(err => console.log(err));\n    };\n\n    */\n\n    signupForm = (name, email, password) => (\n       /* <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    onChange={this.handleChange(\"name\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={name}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    onChange={this.handleChange(\"email\")}\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    onChange={this.handleChange(\"password\")}\n                    type=\"password\"\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n            <button\n                onClick={this.clickSubmit}\n                className=\"btn btn-raised btn-primary\"\n            >\n                Submit\n            </button>\n        </form>\n\n*/ \n<form>\n            <div className=\"signup__container\">\n            <div className=\"container__child signup__thumbnail\">\n              <div className=\"thumbnail__logo\">\n              </div>\n              <div className=\"thumbnail__content text-center\">\n                <h2 className=\"heading--secondary\">Are you ready to join the elite?</h2>\n              </div>\n             \n              <div className=\"signup__overlay\"></div>\n            </div>\n            <div className=\"container__child signup__form\">\n              <form action=\"#\">\n                <div className=\"form-group\">\n\n                  <label className=\"username\">Username</label>\n                  <input \n                  className=\"form-control\"\n                   onChange = {this.handleChange(\"name\")} type=\"text\" name=\"username\" id=\"username\" placeholder=\"iron.hacker\"  r value={name} required />\n                </div>\n\n                <div className=\"form-group\">\n                  <label className=\"email\">Email</label>\n                  <input className=\"form-control\" onChange={this.handleChange(\"email\")} type=\"email\" name=\"email\" id=\"email\" placeholder=\"dev.squad@gmail.com\" required value={email} />\n                </div>\n\n                <div className=\"form-group\">\n                  <label classname=\"password\">Password</label>\n                  <input className=\"form-control\" onChange={this.handleChange(\"password\")} \n                  type=\"password\" name=\"password\" id=\"password\" placeholder=\"********\" required value={this.state.password} />\n                </div>\n\n                <div className=\"form-group\">\n              \n\n                \n            </div>\n      \n                <div className=\"m-t-lg\">\n                  <ul className=\"list-inline\">\n                    <li>\n                      <input className=\"btn btn--form\" onClick={this.clickSubmit} type=\"submit\" value=\"Register\" />\n                    </li>\n                    \n                  </ul>\n                </div>\n              </form>  \n            </div>\n          </div>\n    </form> \n\n);\n\n\n    render() {\n        const { name, email, password, error, open } = this.state;\n        return (\n            <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">Signup</h2>\n\n                <div\n                    className=\"alert alert-danger\"\n                    style={{ display: error ? \"\" : \"none\" }}\n                >\n                    {error}\n                </div>\n\n                <div\n                    className=\"alert alert-info\"\n                    style={{ display: open ? \"\" : \"none\" }}\n                >\n                    New account is successfully created. Please Sign In.\n                </div>\n\n                {this.signupForm(name, email, password)}\n            </div>\n        );\n    }\n}\n\nexport default Signup;","\n\n\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {signin, authenticate} from '../auth';\n\nclass Signin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            redirectToReferer: false\n        };\n    }\n// This will take the name as parameter , and the arrow function will return another function\n    // as the input changes, they will be available on the event target\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        this.setState({ [name]: event.target.value });\n         // based on the input we populate the field\n    };\n\n\n    /*\n    authenticate(jwt, next) {\n        if (typeof window !== \"undefined\") {\n            localStorage.setItem(\"jwt\", JSON.stringify(jwt));// access localStorage & grab the token\n            next();\n        }\n    }\n*/\n    clickSubmit = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        const user = {\n            email,\n            password\n        };\n        console.log(user);\n        signin(user).then(data => {\n            if (data.error) {\n                this.setState({ error: data.error });\n            } else {\n                // authenticate\n                authenticate(data, () => {\n                    this.setState({ redirectToReferer: true });\n                });\n            }\n        });\n    };\n\n   /* signin = user => {\n        return fetch(\"http://localhost:8000/signin\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n            .then(response => {\n                return response.json();\n            })\n            .catch(err => console.log(err));\n    }; */\n\n    signinForm = (email, password) => (\n        <form>\n            \n\n                <div className=\"form-group\">\n                  <label className=\"email\">Email</label>\n                  <input className=\"form-control\" onChange={this.handleChange(\"email\")} type=\"email\" name=\"email\" id=\"email\" placeholder=\"dev.squad@gmail.com\" required value={email} />\n                </div>\n\n                <div className=\"form-group\">\n                  <label classname=\"password\">Password</label>\n                  <input className=\"form-control\" onChange={this.handleChange(\"password\")} \n                  type=\"password\" name=\"password\" id=\"password\" placeholder=\"********\" required value={this.state.password} />\n                </div>\n\n                <div className=\"form-group\">\n               \n\n              \n            </div>\n      \n                <div className=\"m-t-lg\">\n                  <ul className=\"list-inline\">\n                    <li>\n                      <input className=\"btn btn--form\" onClick={this.clickSubmit} type=\"submit\" value=\"Log in\" />\n                    </li>\n                    \n                  </ul>\n                </div>\n              </form> \n    );\n\n    render() {\n        const { email, password, error, redirectToReferer } = this.state;\n\n        if (redirectToReferer) {\n            return <Redirect to=\"/\" />; // component provided by React Dom \n        }\n\n        return (\n            <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">Signin</h2>\n\n                <div\n                    className=\"alert alert-danger\"\n                    style={{ display: error ? \"\" : \"none\" }}\n                >\n                    {error}\n                </div>\n\n                {this.signinForm(email, password)}\n            </div>\n        );\n    }\n}\n\nexport default Signin;","\n\nimport React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect,Link } from \"react-router-dom\";\n\nimport {read} from \"./apiUser\" //; to connect to the back \n\n\n\n// We will create a state with user & redirect \n// if not loged in user redirect to signin \n// set the state to false by default \nclass Profile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: \"\",\n            redirectToSignin: false\n        };\n    }\n    init = userId => {\n        const token = isAuthenticated().token;\n        read(userId, token).then(data => {\n            if (data.error) {\n                this.setState({ redirectToSignin: true });\n            } else {\n                this.setState({ user: data });\n            }\n        });\n    };\n    //We want to get user info from the backend\n    // We need to grab User id & do a get request to the backend\n    // when the component is mounted, then we will get userId\n    // we have info in the local Storage about the user\n    //in auth index there is a method is Authenticated we can use it\n    // if authenticated get name etc & populate\n    // we need to send the token in the header so we use it \n    // we are going to send the content-type, a json app\n    // we need to put the Autorization Header \n    componentDidMount() {\n        const userId = this.props.match.params.userId;\n        //domain name & user & userId\n        // we will get user info when we will make a request to this link\n        this.init(userId)\n\n       /* fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${isAuthenticated().token}`\n            }\n        })\n            .then(response => { // not resolved yet ,  a promise object that is trying to give a response\n                // we are not handling here\n                // we can return response.json to handle response\n                return response.json();\n            })\n            .then(data => {\n                if (data.error) {\n                    this.setState({ redirectToSignin: true });\n                } else {\n                    this.setState({ user: data });\n                }\n            }); */\n    }\n\n    render() {\n        const { redirectToSignin, user } = this.state;\n        if (redirectToSignin) return <Redirect to=\"/signin\" />;\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h2 className=\"mt-5 mb-5\">Profile</h2>\n                        <p>Hello {isAuthenticated().user.name}</p>\n                        <p>Email: {isAuthenticated().user.email}</p>\n                        <p>{`Joined ${new Date(\n                            user.created\n                        ).toDateString()}`}</p>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                        {isAuthenticated().user &&\n                            isAuthenticated().user._id == user._id && (\n                                <div className=\"d-inline-block mt-5\">\n                                    <Link\n                                        className=\"btn btn-raised btn-success mr-5\"\n                                        to={`/user/edit/${user._id}`}\n                                    >\n                                        Edit Profile\n                                    </Link>\n                                    <button className=\"btn btn-raised btn-danger\">\n                                        Delete Profile\n                                    </button>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","export const read = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n","\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./core/Home\";\nimport Menu from \"./core/Menu\";\nimport Signup from \"./User/Signup\";\nimport Signin from \"./User/Signin\";\nimport Profile from \"./User/Profile\";\n\nconst MainRouter = () => (\n    <div>\n\n    <Menu/>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/signin\" component={Signin} />\n            <Route exact path=\"/user/:userId\" component={Profile} /> \n            \n         \n\n        </Switch>\n    </div>\n);\n\nexport default MainRouter;","\n\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport MainRouter from \"./MainRouter\";\nimport  './App.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => (\n    <BrowserRouter>\n        <MainRouter />\n    </BrowserRouter>\n);\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n            import App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}